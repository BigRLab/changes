from __future__ import absolute_import

from changes.lib import build_lib
from changes.models.plan import PlanStatus
from changes.testutils import TestCase


class AutogeneratedJobplansTestCase(TestCase):
    def test_false(self):
        build = self.create_build(self.create_project())
        assert not build_lib.contains_autogenerated_plan(build)

    def test_false_value(self):
        project = self.create_project()
        plan = self.create_plan(project)
        self.create_option(item_id=plan.id, name='bazel.autogenerate', value='0')
        build = self.create_build(project)
        job = self.create_job(build)
        jobplan = self.create_job_plan(job, plan)
        assert not build_lib.contains_autogenerated_plan(build)

    def test_true(self):
        project = self.create_project()
        plan = self.create_plan(project)
        self.create_option(item_id=plan.id, name='bazel.autogenerate', value='1')
        build = self.create_build(project)
        job = self.create_job(build)
        jobplan = self.create_job_plan(job, plan)
        assert build_lib.contains_autogenerated_plan(build)

    def test_true_multiple(self):
        project = self.create_project()
        plan = self.create_plan(project, status=PlanStatus.active)
        self.create_option(item_id=plan.id, name='bazel.autogenerate', value='0')
        build = self.create_build(project)
        job = self.create_job(build)
        jobplan = self.create_job_plan(job, plan)
        plan = self.create_plan(project, status=PlanStatus.active)
        self.create_option(item_id=plan.id, name='bazel.autogenerate', value='1')
        build = self.create_build(project)
        job = self.create_job(build)
        jobplan = self.create_job_plan(job, plan)
        assert build_lib.contains_autogenerated_plan(build)
